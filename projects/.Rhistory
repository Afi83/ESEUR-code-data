fit.quality=function(half.day.list)
{
fd=fitdist(half.day.list, "nbinom", method="mme"))
return(c(fd$loglik, fd$aic, fd$bic))
}
 fit.quality=function(half.day.list)
{
fd=fitdist(half.day.list, "nbinom", method="mme")
return(c(fd$loglik, fd$aic, fd$bic))
}
t=replicate(1000, fit.quality(sub.divide(p$Cycle.Time[Done.day < 650])))
str(t)
colsums(t)
colSums(t)
?colSums
rowMeans(t)
fit_equ(p$Cycle.Time[Done.day < 650])
fit.quality(sub.divide(p$Cycle.Time[Done.day < 650]))
rowMeans(replicate(1000, fit.quality(sub.divide(p$Cycle.Time[Done.day < 650]))))
fit.quality(p$Cycle.Time[Done.day < 650])
rowMeans(replicate(1000, fit.quality(sub.divide(p$Cycle.Time[Done.day < 650]))))
fit.quality=function(half.day.list)
{
fd=fitdist(half.day.list, "nbinom", method="mme")
return(c(loglikelihood=fd$loglik, AIC=fd$aic, BIC=fd$bic))
}
fit.quality(p$Cycle.Time[Done.day < 650])
rowMeans(replicate(1000, fit.quality(sub.divide(p$Cycle.Time[Done.day < 650]))))
library(gamlss)
?gamlss
d1=p$Cycle.Time[Done.day < 650]
g1=histdist(d1, "NBI")
g1=histDist(d1, "NBI")
g1=histDist(d1, "NBII")
g1=histDist(d1, "NBI")
g1=gamlss(d1 ~1, family=HBI)
g1=gamlss(d1 ~1, family=NBI)
g2=gamlss(d1 ~1, family=NBII)
plot(g1)
plot(g2)
plot(table(day_count), xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p",
            xlab="Elapsed working days", ylab="Features")
plot(table(d1), xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p")
plot(predict(g1), xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p")
summary(g1)
summary(g2)
g2=gamlss(d1 ~1, family=DEL)
summary(g2)
d2=p$Cycle.Time[Done.day >= 650]
g22=gamlss(d2 ~1, family=DEL)
g12=gamlss(d2 ~1, family=HBI)
g12=gamlss(d2 ~1, family=NBI)
summary(g1)
summary(g12)
summary(g22)
plot(table(d1), xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p")
pdf.plot(g1, xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p")
pdf.plot(g1, min=1, max=90, xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p")
pdf.plot(g1, min=1, max=90, step=1, xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p")
?pdf.plot
plot(fitted(g1), xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p")
?fitted
plot(fitted(g12), xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p")
?lpred
lpred(g1)
plot(table(predict(g12)), xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p")
plot(table(lpred(g12)), xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p")
t=lpred(g12)
str(t)
table(t)
t=fitted(g12)
table(t)
str(t)
summary(g12)
h1=histDist(d1, NBI)
summary(h1)
?histDist
?histDist
h1=histDist(d1, "NBI")
summary(h1)
h1=histDist(d1, "DEL")
summary(h1)
fitted.plot(g1)
?fitted.plot
??fitted
fittedPlot(g1)
?fittedPlot
fittedPlot(g1, d1)
g12=gamlss(d2 ~1, family=NBI)
fittedPlot(g12, d2)
?fittedPlot
fittedPlot(g12, x=d2)
?fittedPlot
coeff(g1)
coef(g1)
str(g1)
summary(g1)
summary(g22)
g1.NBI=gamlss(d1 ~ 1, family=NBI)
g1.DEL=gamlss(d1 ~ 1, family=DEL)
ceof(g1.DEL)
coef(g1.DEL)
?fv
?dDEL
plot(table(day_count), xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p",
            xlab="Elapsed working days", ylab="Features")
par(new=TRUE)
plot(dDEL(1:93, mu=1.54,sigma=1.428, nu=-0.436)*length(day_count),
       xlim=c(1,90), ylim=c(1,1200), log="xy",
       xlab="", ylab="",
       type="l", col="black")
par(new=TRUE)
plot(dDEL(1:93, mu=1.54,sigma=1.428, nu=0.436)*length(day_count),
       xlim=c(1,90), ylim=c(1,1200), log="xy",
       xlab="", ylab="",
       type="l", col="black")
par(new=TRUE)
plot(dDEL(1:93, mu=1.54, sigma=1.428, nu=x-0.436)*length(d1),
       xlim=c(1,90), ylim=c(1,1200), log="xy",
       xlab="", ylab="",
       type="l", col="black")
par(new=TRUE)
plot(dDEL(1:93, mu=1.54, sigma=1.428, nu=0.436)*length(d1),
       xlim=c(1,90), ylim=c(1,1200), log="xy",
       xlab="", ylab="",
       type="l", col="black")
?dDEL
d1=p$Cycle.Time[Done.day < 650]
g1.NBI=gamlss(d1 ~ 1, family=NBI)
g1.DEL=gamlss(d1 ~ 1, family=DEL)
plot(table(d1), xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p",
            xlab="Elapsed working days", ylab="Features")
par(new=TRUE)
plot(dDEL(1:93, mu=1.54, sigma=1.428, nu=-0.436)*length(d1),
       xlim=c(1,90), ylim=c(1,1200), log="xy",
       xlab="", ylab="",
       type="l", col="black")
par(new=TRUE)
plot(dDEL(1:93, mu=1.54, sigma=1.428, nu=0.436)*length(d1),
       xlim=c(1,90), ylim=c(1,1200), log="xy",
       xlab="", ylab="",
       type="l", col="black")
summary(g1.NBI)
d2=p$Cycle.Time[Done.day >= 650]
g2.NBI=gamlss(d2 ~ 1, family=NBI)
g2.DEL=gamlss(d2 ~ 1, family=DEL)
plot(table(d2), xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p",
            xlab="Elapsed working days", ylab="Features")
summary(d2.DEL)
summary(g2.DEL)
summary(g1.DEL)
plot(table(d1), xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p",
            xlab="Elapsed working days", ylab="Features")
par(new=TRUE)
plot(dDEL(1:93, mu=2.05, sigma=1.076, nu=0.436)*length(d1),
       xlim=c(1,90), ylim=c(1,1200), log="xy",
       xlab="", ylab="",
       type="l", col="black")
par(new=TRUE)
plot(dDEL(1:93, mu=2.05, sigma=1.076, nu=1.6)*length(d1),
       xlim=c(1,90), ylim=c(1,1200), log="xy",
       xlab="", ylab="",
       type="l", col="black")
terms(g1.NBI)
?predict.gamlss
t=predict(g1.DEL, type="response")
str(t)
?predict.gamlss
t=predict(g1.DEL, newdata=1:90, type="response")
t=predict(g1.DEL, newdata=1:90)
?predict.gamlss
?predict.gamlss
t=predict(g1.DEL)[610]
length(t)
t
t=predict(g1.DEL)
t[1:3]
?gamlss
g1$mu.fv
?gamlss
g1$mu.lp
?gamlss
g1$mu.coefficients
g1$nu.coefficients
g1$sigma.coefficients
g1.DEL$nu.coefficients
?gamlss
formula(g1)
?logit
??logit
inv.logit(-0.4)
?inv.logit
??logit
boot:inv.logit(-0.4)
library(boot)
inv.logit(-0.4)
inv.logit(1.6)
summary(g1.DEL)
plot(table(d1), xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p",
            xlab="Elapsed working days", ylab="Features")
par(new=TRUE)
plot(dDEL(1:93, mu=2.05, sigma=exp(1.076), nu=inv.logit(-1.6))*length(d1),
       xlim=c(1,90), ylim=c(1,1200), log="xy",
       xlab="", ylab="",
       type="l", col="black")
summary(g2.DEL)
plot(table(d2), xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p",
            xlab="Elapsed working days", ylab="Features")
par(new=TRUE)
plot(dDEL(1:93, mu=1.54, sigma=exp(1.428), nu=inv.logit(-0.437))*length(d2),
       xlim=c(1,90), ylim=c(1,1200), log="xy",
       xlab="", ylab="", 
       type="l", col="black") 
summary(g1.NBI)
exp(2.03)
exp(0.131)
summary(g1.DEL)
plot(table(d2), xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p",
            xlab="Elapsed working days", ylab="Features")
par(new=TRUE)
plot(dDEL(1:93, mu=exp(1.54), sigma=exp(1.428), nu=inv.logit(-0.437))*length(d2),
       xlim=c(1,90), ylim=c(1,1200), log="xy",
       xlab="", ylab="", 
       type="l", col="black") 
plot(table(d1), xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p",
            xlab="Elapsed working days", ylab="Features")
par(new=TRUE)
plot(dDEL(1:93, mu=exp(2.05), sigma=exp(1.076), nu=inv.logit(-1.6))*length(d1),
       xlim=c(1,90), ylim=c(1,1200), log="xy",
       xlab="", ylab="",
       type="l", col="black")
d3=sub.divide(d2)
g3.DEL=gamlss(d3 ~ 1, family=DEL)
library(gamlss.tr)
?gam.trunc
?gamlss.trunc
?gen.trunc
?gen.trun
gen.trun(par=1, family=NBI)
g1.NBItr=gamlss(d1 ~ 1, family=NBItr)
gen.trun(par=0, family=NBI)
g1.NBItr=gamlss(d1 ~ 1, family=NBItr)
summary(g1.NBItr)
summary(g1.NBI)
plot(table(d1), xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p",
            xlab="Elapsed working days", ylab="Features")
par(new=TRUE)
plot(dNBItr(1:93, mu=exp(0.568), sigma=exp(2.49))*length(d1),
       xlim=c(1,90), ylim=c(1,1200), log="xy",
       xlab="", ylab="",
       type="l", col="black")
length(d3)
length(d1)
d3=sub.divide(d1)
length(d1)
length(d3)
g3.NBItr=gamlss(d3 ~ 1, family=NBItr)
g2.NBItr=gamlss(d2 ~ 1, family=NBItr)
summary(g2.NBI)
summary(g2.NBItr)
?coef
?coef.gamlss
coef(g1.NBI,  what = c("mu", "sigma", "nu"))
?coef.gamlss
coef(g1.NBI)
gen.run(par=0, family=DEL)
gen.trun(par=0, family=DEL)
g2.DELtr=gamlss(d2 ~ 1, family=DELtr)
summary(g2.DELtr)
summary(g2.NBItr)
g1.DELtr=gamlss(d1 ~ 1, family=DELtr)
summary(g1.NBItr)
gen.trun(par=0, family=NBII)
g1.NBIItr=gamlss(d1 ~ 1, family=NBIItr)
g2.NBIItr=gamlss(d2 ~ 1, family=NBIItr)
summary(g2.NBItr)
summary(g2.NBIItr)
coef(g1.NBIItr, "mu")
coef(g1.NBIItr, "sigma")
fit.NBII(day.list)
{
g.NBIItr=gamlss(day.list ~ 1, family=NBItr)
NBII.mu=exp(coef(g.NBIItr, "mu"))
NBII.sigma=exp(coef(g.NBIItr, "sigma"))
plot(table(day.list), xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p",
            xlab="Elapsed working days", ylab="Features")
par(new=TRUE)
plot(dNBIItr(1:93, mu=NBII.mu, sigma=NBII.sigma)*length(day.list),
       xlim=c(1,90), ylim=c(1,1200), log="xy",
       xlab="", ylab="",
       type="l", col="black")
}
fit.NBII=function(day.list)
{
g.NBIItr=gamlss(day.list ~ 1, family=NBItr)
NBII.mu=exp(coef(g.NBIItr, "mu"))
NBII.sigma=exp(coef(g.NBIItr, "sigma"))
plot(table(day.list), xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p",
            xlab="Elapsed working days", ylab="Features")
par(new=TRUE)
plot(dNBIItr(1:93, mu=NBII.mu, sigma=NBII.sigma)*length(day.list),
       xlim=c(1,90), ylim=c(1,1200), log="xy",
       xlab="", ylab="",
       type="l", col="black")
}
fit.NBII(p$Cycle.Time[Done.day >= 650])
gen.trun(par=0, family=NBII)
fit.NBII=function(day.list)
{
g.NBIItr=gamlss(day.list ~ 1, family=NBItr)
NBII.mu=exp(coef(g.NBIItr, "mu"))
NBII.sigma=exp(coef(g.NBIItr, "sigma"))
plot(table(day.list), xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p",
            xlab="Elapsed working days", ylab="Features")
par(new=TRUE)
plot(dNBIItr(1:93, mu=NBII.mu, sigma=NBII.sigma)*length(day.list),
       xlim=c(1,90), ylim=c(1,1200), log="xy",
       xlab="", ylab="",
       type="l", col="black")
}
fit.NBII(p$Cycle.Time[Done.day <= 650])
fit.NBII(p$Cycle.Time[Done.day > 650])
~                                                                                  
par(mfcol=c(2,1))
fit.NBII(p$Cycle.Time[Done.day <= 650])
fit.NBII(p$Cycle.Time[Done.day > 650])
logLik(g1.NBIItr)
logLik(g1.NBIItr, g2.NBIItr)
AIC(g1.NBIItr, g2.NBIItr)
summary(g1.NBIItr)
t=logLik(g1.NBIItr)
t
str(t)
as.integer(t)
as.numeric(t)
# Fit a zero-truncated, type II, negative binomial distribution
fit.NBII=function(day.list)
{
g.NBIItr=gamlss(day.list ~ 1, family=NBIItr)
print(summary(g.NBIItr))
NBII.mu=exp(coef(g.NBIItr, "mu")) 
NBII.sigma=exp(coef(g.NBIItr, "sigma"))
plot(table(day.list), xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p",
            xlab="Elapsed working days", ylab="Feature count")
       
par(new=TRUE)
plot(dNBIItr(1:93, mu=NBII.mu, sigma=NBII.sigma)*length(day.list),
       xlim=c(1,90), ylim=c(1,1200), log="xy",
       xlab="", ylab="",
       type="l", col="red")
return(c(AIC=as.numeric(AIC(g.NBIItr)),
         log.likelihood=as.numeric(logLik(g.NBIItr))))
}
qual.pre650=fit.NBII(p$Cycle.Time[Done.day <= 650])
qual.post650=fit.NBII(p$Cycle.Time[Done.day > 650])
exp(-0.3756)
exp(-0.4056)
exp(3.1)
exp(2.2)
fix.miss.day=function(day.list)
{
day.list[(day.list %% 7) == 5]=day.list[(day.list %% 7) == 5]-1
day.list[(day.list %% 7) == 6]=day.list[(day.list %% 7) == 6]+1
return(day.list)
}
NetWorkDays = function(start.date, end.date)
{
start.day=fix.miss.day(as.numeric(as.Date(start.date, "%d/%m/%Y"))+3)
end.day=fix.miss.day(as.numeric(as.Date(end.date, "%d/%m/%Y"))+3)
days.diff=end.day - start.day
num.weeks=days.diff %/% 7
days.left=(days.diff %% 7)
day.max=days.left + start.day %% 7
# Does days.left+start.day include any weekend days?
weekend.days=ifelse(day.max > 4, ifelse(day.max > 5, 2, 1), 0)
# Add 1 because we count start==end as 1 day
return(num.weeks*5+days.left+1-weekend.days)
}
t=NetWorkDays(p$Dev.Started, p$Done)
table(t)
table(p$Cycle.Time)
t=get.ph.days()
t
99 > hol.days
length(which(99 > hol.days))
NetWorkDays = function(start.date, end.date)
{
start.day=fix.miss.day(as.numeric(as.Date(start.date, "%d/%m/%Y"))+3)
end.day=fix.miss.day(as.numeric(as.Date(end.date, "%d/%m/%Y"))+3)
days.diff=end.day - start.day
num.weeks=days.diff %/% 7
hol.days=as.vector(get.ph.days())-base.day
hol.days=hol.days[hol.days > 0 & !is.na(hol.days)]
          
days.left=(days.diff %% 7)
day.max=days.left + start.day %% 7
# Does days.left+start.day include any weekend days?
weekend.days=ifelse(day.max > 4, ifelse(day.max > 5, 2, 1), 0)
# Add 1 because we count start==end as 1 day
return(num.weeks*5+days.left+1-weekend.days - 
 (length(which(end.day > hol.days)) - length(which(start.day > hol.days))))
} 
table(t)
t=NetWorkDays(p$Dev.Started, p$Done)
NetWorkDays = function(start.date, end.date)
{
start.day=fix.miss.day(as.numeric(as.Date(start.date, "%d/%m/%Y"))+3)
end.day=fix.miss.day(as.numeric(as.Date(end.date, "%d/%m/%Y"))+3)
days.diff=end.day - start.day
num.weeks=days.diff %/% 7
hol.days=as.vector(get.ph.days())-base.day
hol.days=hol.days[hol.days > 0 & !is.na(hol.days)]
start.hols=sapply(1:length(start.day), function(x)
                             length(which(start.day[x] > hol.days)))
end.hols=sapply(1:length(start.day), function(x)
                             length(which(end.day[x] > hol.days)))
          
days.left=(days.diff %% 7)
day.max=days.left + start.day %% 7
# Does days.left+start.day include any weekend days?
weekend.days=ifelse(day.max > 4, ifelse(day.max > 5, 2, 1), 0)
# Add 1 because we count start==end as 1 day
return(num.weeks*5+days.left+1-weekend.days - (end.hols-start.hols))
} 
t=NetWorkDays(p$Dev.Started, p$Done)
table(t)
NetWorkDays = function(start.date, end.date)
{
start.day=fix.miss.day(as.numeric(as.Date(start.date, "%d/%m/%Y"))+3)
end.day=fix.miss.day(as.numeric(as.Date(end.date, "%d/%m/%Y"))+3)
days.diff=end.day - start.day
num.weeks=days.diff %/% 7
hol.days=as.vector(get.ph.days())
hol.days=hol.days[hol.days > 0 & !is.na(hol.days)]
start.hols=sapply(1:length(start.day), function(x)
                             length(which(start.day[x] > hol.days)))
end.hols=sapply(1:length(start.day), function(x)
                             length(which(end.day[x] > hol.days)))
          
days.left=(days.diff %% 7)
day.max=days.left + start.day %% 7
# Does days.left+start.day include any weekend days?
weekend.days=ifelse(day.max > 4, ifelse(day.max > 5, 2, 1), 0)
# Add 1 because we count start==end as 1 day
return(num.weeks*5+days.left+1-weekend.days - (end.hols-start.hols))
} 
 t=NetWorkDays(p$Dev.Started, p$Done)
table(t)
p$Cycle.Time=t
 t=NetWorkDays(p$Prioritised, p$Done)
table(t)
table(p$Lead.Time)
sum(t)
t[t==-3]=1
t[t==0]=1
table(t)
p$Lead.Time=t
str(p)
p$Team=NULL
p$Id=NULL
p$Application=NULL
head(p)
table(p$Size)
p$Size[p$Size == "Support"]=NA
p$Size[p$Size == "Infrastructure"]=NA
p$Size[p$Size == "Reports"]=NA
p$Size[p$Size == "N/A"]=NA
table(p$Size)
p$Size[p$Size == ""]=NA
table(p$Size)
head(p)
p$Size[p$Size == "Bug"]=NA
head(p)
?write.csv
write.csv(p, file="7digital.csv", row.names=FALSE)
fit.NBII(p$Cycle.Time[p$Type == "Production Bug"])
fit.NBII(p$Cycle.Time[p$Type == "MMF"])
g2.DEL=gamlss(d2 ~ 1, family=DEL)
plot(table(d2), xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p",
            xlab="Elapsed working days", ylab="Features")
par(new=TRUE)
plot(dDEL(1:93, mu=exp(coef(g2.DEL, "mu")), 
                sigma=exp(coef(g2.DEL, "sigma")), 
                 nu=inv.logit(coef(g2.DEL, "nu")))*length(d2),
       xlim=c(1,90), ylim=c(1,1200), log="xy",
       xlab="", ylab="",
       type="l", col="red")
gen.trun(par=0, family=DEL)
g2.DELtr=gamlss(d2 ~ 1, family=DELtr)
plot(table(d2), xlim=c(1, 90), ylim=c(1, 1200), log="xy", type="p",
            xlab="Elapsed working days", ylab="Features")
par(new=TRUE)
plot(dDELtr(1:93, mu=exp(coef(g2.DEL, "mu")),
                sigma=exp(coef(g2.DEL, "sigma")), 
                 nu=inv.logit(coef(g2.DEL, "nu")))*length(d2),
       xlim=c(1,90), ylim=c(1,1200), log="xy",
       xlab="", ylab="",
       type="l", col="red")
par(new=TRUE)
plot(dDELtr(1:93, mu=exp(coef(g2.DELtr, "mu")),
                sigma=exp(coef(g2.DELtr, "sigma")),
                 nu=inv.logit(coef(g2.DELtr, "nu")))*length(d2),
       xlim=c(1,90), ylim=c(1,1200), log="xy",
       xlab="", ylab="",
       type="l", col="red")
d1=p$Cycle.Time[Done.day <= 650]
g1.DELtr=gamlss(d1 ~ 1, family=DELtr)
table(p$Size)
fit.NBII(p$Cycle.Time[p$Size == "Small"])
 quit()
rm(list=ls())
quit()
